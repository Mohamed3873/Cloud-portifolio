name: Terraform Deployment Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.3.7

    - name: Decode GCP Credentials Secret
      run: |
        echo "${{ secrets.GCP_CREDENTIALS }}" | base64 --decode > /tmp/gcp_credentials.json
        echo "GCP credentials decoded successfully"
      shell: bash

    - name: Verify GCP Credentials File
      run: |
        if [ ! -s /tmp/gcp_credentials.json ]; then
          echo "GCP credentials file is empty or does not exist"
          exit 1
        else
          echo "GCP credentials file created successfully"
        fi
      shell: bash

    - name: Debug Environment
      run: env | sort

    - name: Validate GCP Credentials File Format
      run: |
        cat /tmp/gcp_credentials.json | jq .
      shell: bash

    - name: Terraform Init
      run: terraform init
      working-directory: ./src/main/terraform

    - name: Terraform Plan
      env:
        TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
        GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp_credentials.json
      run: terraform plan
      working-directory: ./src/main/terraform

    - name: Import Cloud SQL Instance if needed
      env:
        GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp_credentials.json
        TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
      run: |
        if ! terraform state list | grep -q 'google_sql_database_instance.my_mysql_instance'; then
          echo "Cloud SQL instance not found in state, importing..."
          terraform import google_sql_database_instance.my_mysql_instance projects/awesome-destiny-436710-j1/instances/cloud-sql
        else
          echo "Cloud SQL instance already in state."
        fi
      working-directory: ./src/main/terraform

    - name: Import Cloud SQL Database if needed
      env:
        GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp_credentials.json
        TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
      run: |
        if ! terraform state list | grep -q 'google_sql_database.my_database'; then
          echo "Database not found in state, importing..."
          terraform import google_sql_database.my_database projects/awesome-destiny-436710-j1/instances/cloud-sql/databases/terraform_database
        else
          echo "Database already in state."
        fi
      working-directory: ./src/main/terraform


    - name: Terraform Apply
      env:
        GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp_credentials.json
      run: terraform apply -auto-approve -var="db_password=${{ secrets.DB_PASSWORD }}"
      working-directory: ./src/main/terraform

    - name: Run deployment script
      run: |
        bash ./src/main/terraform/metascript.txt
